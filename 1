local TowersUHave = {}
for i,v in next, game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Session", "Search", "Inventory.Troops") do
    if v.Equipped then
        table.insert(TowersUHave, i)
    end
end
wait(1)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Qianyo1/tds/main/leak"))()
local Window = Library.CreateLib("btds hub 6.0", "BloodTheme")
local Credits = Window:NewTab("Others")
local Lobby = Window:NewTab("Game")
local Visual = Lobby:NewSection("Visual")
local AutoChain = Lobby:NewSection("AutoAbility")
local turn = false
local CreditsBar = Credits:NewSection("Credits")
CreditsBar:NewLabel("Made by")
CreditsBar:NewLabel("easy#9499 and 3EloHIyChay123123#7087")
CreditsBar:NewKeybind("Toggle Gui", "", Enum.KeyCode.RightShift, function()
	Library:ToggleUI()
end)

local Stack = Lobby:NewSection("Stack")
Stack:NewTextBox("TowerNameHere", "Make sure u stand in the position u want to place", function(txt)
	local args = {
		[1] = "Troops",
		[2] = "Place",
		[3] = txt,
		[4] = {
			["Rotation"] = CFrame.new(0,5,0,0,5,0,0,5,0,0,5,0),
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	}

	game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
end)

local Lobbyl = Window:NewTab("Lobby")
local LeaderBoard = Lobbyl:NewSection("Lobby")

LeaderBoard:NewButton("Update leader board", "This will update the leader board", function()

	local A_1 = "Leaderboard"
	local A_2 = "Request"
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2)

end)







LeaderBoard:NewLabel("You have ".. game.Players.LocalPlayer.Loses.Value.. " loses")
local Board = LeaderBoard:NewLabel("eeee has eeeee")
local Selling = Lobby:NewSection("Selling")

Selling:NewButton("Sell all towers", "ok", function()
	for index,value in pairs(game.Workspace.Towers:GetChildren()) do
		-- Script generated by R2Sv2
		-- R2Sv2 developed by Luckyxero

		local A_1 = "Troops"
		local A_2 = "Sell"
		local A_3 = 
			{
				["Troop"] = value 
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, A_3)

	end
	wait()
end)


Selling:NewTextBox("SellAllTowersName", "ok", function(txt)
	for index,value in pairs(game.Workspace.Towers:GetChildren()) do
		if value.Replicator:GetAttribute("Type") == txt then



			local A_1 = "Troops"
			local A_2 = "Sell"
			local A_3 = 
				{
					["Troop"] = value 
				}
			local Event = game:GetService("ReplicatedStorage").RemoteFunction
			Event:InvokeServer(A_1, A_2, A_3)
		end
		wait()
	end


end)
Stack:NewButton("Place weird ace pilot", "This is only work for some map", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Ace Pilot"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,0,0,0,0,0,-90,-90),
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
local pl = game.Players:GetChildren()

Stack:NewButton("Place weird pursuit", "Same as the ace pilot", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Pursuit"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,0,0,0,0,0,-90,-90), 
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)

Stack:NewButton("Place rancutioner", "super high executioner(should use fly script to upgrade)", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Executioner"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,100,0,0,0,0,0,0,0,0,0,0), 
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
AutoChain:NewButton("call all gladiator ability", "ok breh", function()
  for index,value in pairs(game.Workspace.Towers:GetChildren()) do
            if value.Owner.Value == game.Players.LocalPlayer.UserId and value.Replicator:GetAttribute("Type") == "Gladiator" then
                local args = { [1] = "Troops", [2] = "Abilities", [3] = "Activate", [4] = { ["Name"] = "Warrior's Call", ["Troop"] = value } }

					game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
end
end
end)
AutoChain:NewButton("call all swarmer ability", "ok breh", function()
  for index,value in pairs(game.Workspace.Towers:GetChildren()) do
            if value.Owner.Value == game.Players.LocalPlayer.UserId and value.Replicator:GetAttribute("Type") == "Swarmer" then
                local args = { [1] = "Troops", [2] = "Abilities", [3] = "Activate", [4] = { ["Name"] = "Swarm", ["Troop"] = value } }

					game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
end
end
end)
Stack:NewButton("Place weird ace pilot2", "For lay by i guess lol", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Ace Pilot"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,90,-90), 
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
Stack:NewButton("Place weird pursuit2", "For lay by i guess lol", function()
	local A_1 = "Troops"
	local A_2 = "Place"
	local A_3 = "Pursuit"
	local A_4 = 
		{
			["Rotation"] = CFrame.new(0,5,0,0,0,90,-90), 
			["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
		}
	local Event = game:GetService("ReplicatedStorage").RemoteFunction
	Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
local Check = 0
 local Skipping = Lobby:NewSection("Skipping")
 Skipping:NewKeybind("SkipKey", "Breh", Enum.KeyCode.F, function() local args = { [1] = "Waves", [2] = "Skip" }

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args)) end) local CheckEd = false

local lolc = false


local plrs = game.Players:GetChildren()


AutoChain:NewButton("AutoChain", "by money maker", function()
loadstring(game:HttpGet("https://banbus.cf/scripts/tdsautochain"))()

   end)
Stack:NewDropdown("StackTower", "Alt of stack tower name", TowersUHave, function(currentOption)
    local A_1 = "Troops"
		local A_2 = "Place"
		local A_3 = currentOption
		local A_4 = 
			{
				["Rotation"] = CFrame.new(0,5,0), 
				["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, A_3, A_4)
end)
local plr = game.Players.LocalPlayer
local PlaceAnywhere
Visual:NewButton("Get place anywhere position", "k bro", function()
PlaceAnywhere = game.Players.LocalPlayer.character.HumanoidRootPart.Position
end)
Visual:NewDropdown("Place tower anywhere", "breh", TowersUHave, function(currentOption)
local o = plr.character.HumanoidRootPart.Position
local ok = Vector3.new(o - o)
 local A_1 = "Troops"
		local A_2 = "Place"
		local A_3 = currentOption
		local A_4 = 
			{
				["Rotation"] = CFrame.new(PlaceAnywhere) + Vector3.new(ok), 
				["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
			}
		local Event = game:GetService("ReplicatedStorage").RemoteFunction
		Event:InvokeServer(A_1, A_2, A_3, A_4)
end)

_G.SpamSkip = false
Skipping:NewToggle("Autoskip", "Haha yes", function(state)
 _G.SpamSkip = not _G.SpamSkip
end)
game.ReplicatedStorage.State.Voting.Enabled.Changed:Connect(function()
if game.ReplicatedStorage.State.Voting.Enabled.Value == true then
if _G.SpamSkip == true then
 game.ReplicatedStorage.RemoteEvent:FireServer("Waves","Skip")
end
end
end)

Selling:NewButton("Sell all Farms", "breh??ssÄ‘ssd", function()
local wo = game.Workspace.Towers:GetChildren()
for i,v in pairs(wo) do
if v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Farm" then
		local A_1 = "Troops"
			local A_2 = "Sell"
			local A_3 = 
				{
					["Troop"] = v
				}
			local Event = game:GetService("ReplicatedStorage").RemoteFunction
			Event:InvokeServer(A_1, A_2, A_3)
		
		wait()
	
end
end
end)
local DmCheck = false
local TowersHaha = game.Workspace.Towers:GetChildren()

local SpamAbility = false

AutoChain:NewToggle("Spam Medic ability", "Breh", function(state)
    if state then
        DmCheck = true
    else
        DmCheck = false
    end
end)
while wait(1) do
if DmCheck == true then
local args = {
    [1] = "Troops",
    [2] = "Place",
    [3] = "Medic",
    [4] = {
        ["Rotation"] = CFrame.new(Vector3.new(0, 0, 0), Vector3.new(-0, -0, -1)),
        ["Position"] = game.Players.LocalPlayer.character.HumanoidRootPart.Position - Vector3.new(0,5,0)
    }
}
local Dmagain = game.Workspace.Towers:GetChildren()
game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
for i,v in pairs(Dmagain) do
if v.Owner.Value == game.Players.LocalPlayer.UserId and v.Replicator:GetAttribute("Type") == "Medic" then
local args = {
    [1] = "Troops",
    [2] = "Upgrade",
    [3] = "Set",
    [4] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.1)
local args = {
    [1] = "Troops",
    [2] = "Upgrade",
    [3] = "Set",
    [4] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.1)
local args = {
    [1] = "Troops",
    [2] = "Upgrade",
    [3] = "Set",
    [4] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.1)
local args = {
    [1] = "Troops",
    [2] = "Upgrade",
    [3] = "Set",
    [4] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.1)
local args = {
    [1] = "Troops",
    [2] = "Upgrade",
    [3] = "Set",
    [4] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.5)
local args = {
    [1] = "Troops",
    [2] = "Abilities",
    [3] = "Activate",
    [4] = {
        ["Name"] = "Cleansing",
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
wait(0.1)
local args = {
    [1] = "Troops",
    [2] = "Sell",
    [3] = {
        ["Troop"] = v
    }
}

game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
end
end
end
end
-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "lol"
local TextButton = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextButton.Parent = ScreenGui
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.Position = UDim2.new(0.886780739, 0, 0.493946731, 0)
TextButton.Size = UDim2.new(0, 96, 0, 50)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Toggle gui"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 14.000
TextButton.MouseButton1Click:Connect(function()
	Library:ToggleUI()
end)
